//===- FRISCCallingConv.td - Calling Conventions for FRISC -*- tabFRISCen -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
// This describes the calling conventions for FRISC architecture.
//===----------------------------------------------------------------------===//

def RetCC_FRISC : CallingConv<[
    // Promote i8/i16 arguments to i32.
    CCIfType<[i8, i16], CCPromoteToType<i32>>,

    // i32 are returned in registers R0, R1, R2, R3
    CCIfType<[i32], CCAssignToReg<[R0, R1, R2, R3]>>,

    // Integer values get stored in stack slots that are 4 bytes in
    // size and 4-byte aligned.
    CCIfType<[i32], CCAssignToStack<4, 4>>
]>;

def CC_FRISC : CallingConv<[
    // Pass by value if the byval attribute is given
    CCIfByVal<CCPassByVal<4, 4>>,

    // Promote i8/i16 arguments to i32.
    CCIfType<[i8, i16], CCPromoteToType<i32>>,

    // The first 4 integer arguments are passed in integer registers.
    CCIfType<[i32], CCAssignToReg<[R0, R1, R2, R3]>>,

    // Integer values get stored in stack slots that are 4 bytes in
    // size and 4-byte aligned.
    CCIfType<[i32], CCAssignToStack<4, 4>>
  ]>;

def CC_Save : CalleeSavedRegs<(add SR, PC, SP, R4, R5, R6)>;